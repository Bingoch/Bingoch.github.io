<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mango</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bingoch.github.io/"/>
  <updated>2018-10-12T07:17:24.893Z</updated>
  <id>https://bingoch.github.io/</id>
  
  <author>
    <name>Bingo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Next搭建博客</title>
    <link href="https://bingoch.github.io/2018/10/10/Hexo%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>https://bingoch.github.io/2018/10/10/Hexo安装与配置/</id>
    <published>2018-10-10T09:05:19.144Z</published>
    <updated>2018-10-12T07:17:24.893Z</updated>
    
    <content type="html"><![CDATA[<p>所谓“前人栽树，后人乘凉”，本博客的搭建采用了 <strong>Hexo+Next+Github pages</strong> ，在搭建过程中参考了众多大佬撰写的教程，在此非常感谢，下面进入正题。</p><h1 id="Hexo安装与配置"><a href="#Hexo安装与配置" class="headerlink" title="Hexo安装与配置"></a>Hexo安装与配置</h1><p>在配置环境之前，我们需要先了解一下<strong>Hexo</strong> 。</p><h2 id="1-什么是Hexo"><a href="#1-什么是Hexo" class="headerlink" title="1. 什么是Hexo"></a>1. 什么是Hexo</h2><p><strong>Hexo</strong> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="2-Hexo的安装"><a href="#2-Hexo的安装" class="headerlink" title="2. Hexo的安装"></a>2. Hexo的安装</h2><p>安装 <strong>Hexo</strong> 之前需要先安装 <strong>Node.js</strong> 和 <strong>Git</strong> ，详细安装方法及更多关于 <strong>Hexo</strong> 内容，详见 <strong>Hexo官方文档</strong> 。如果你的电脑中已经安装好了，下面就开始进行 <strong>Hexo</strong> 的安装吧。<br>在D盘（或其他盘）下新建一个hexo目录，开始进行 <strong>Hexo</strong> 的初始化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd d:/hexo</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog # 新建一个网站</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo g # 或者hexo generate 生成静态文件</span><br><span class="line">$ hexo s # 或者hexo server 启动服务器</span><br></pre></td></tr></table></figure><p>初始化以后的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>_config.yml 站点文件是网站的配置信息，可以在此配置大部分的参数。</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>source 资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p>主题文件夹。Hexo 会根据主题来生成静态页面。</p><p>启动好服务器以后，打开浏览器访问网址： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，此时可以看到 <strong>Hexo</strong> 的初始化页面。<br><a href="http://p77e9mol2.bkt.clouddn.com/blog/180416/8hhGf98ig8.png" target="_blank" rel="noopener"><img src="http://p77e9mol2.bkt.clouddn.com/blog/180416/8hhGf98ig8.png" alt="Hexo初始化页面"></a></p><h2 id="3-添加新的选项"><a href="#3-添加新的选项" class="headerlink" title="3. 添加新的选项"></a>3. 添加新的选项</h2><p>这里以”分类“为例，生成“分类”页并添加tpye属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>命令执行完会在\hexo\blog\source\categories 目录下生成一个 index.md 文件，在文件中添加type属性如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>最终效果如图。如需添加其他选项，步骤类似。<a href="http://p77e9mol2.bkt.clouddn.com/blog/180416/HAk09ADD9f.png" target="_blank" rel="noopener"><img src="http://p77e9mol2.bkt.clouddn.com/blog/180416/HAk09ADD9f.png" alt="分类"></a></p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>嫌博客页面太丑，不怕，我们可以安装 <strong>Next</strong> 主题来定制个性化博客,在站点目录下（/blog）执行如下命令开始安装主题 <strong>Next</strong> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /blog</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>安装完成以后可以使用如下命令开启服务器本地访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g # 或者hexo generate 生成静态文件</span><br><span class="line">$ hexo s # 或者hexo server 启动服务器</span><br></pre></td></tr></table></figure><p>关于如何打造更加酷炫的个人博客主页，配置更加个性化的 <strong>Next</strong> 主题，请参考<a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a>。</p><h1 id="Github-Pages设置"><a href="#Github-Pages设置" class="headerlink" title="Github Pages设置"></a>Github Pages设置</h1><p><strong>Hexo</strong> 安装好以后，可以在本地生成静态页面，接下来就需要将静态页面远程部署到 <strong>gitbub</strong> 上，使用Github Pages 默认提供的域名github.io 或者自定义域名来发布站点。<strong>Github Pages</strong> 是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点可以被免费托管在Github上。<br>创建Github Pages比较简单，首先需要注册一个github账号，然后再创建一个仓库就行了，仓库名格式必须为：yourusername.github.io，按提示一直下一步即可。关于github的详细配置，可以参考这篇博文<a href="https://www.jianshu.com/p/6ae3697a7c93" target="_blank" rel="noopener">git的使用及github的配置</a>。</p><p><a href="http://p77e9mol2.bkt.clouddn.com/blog/180416/380E3k9HjE.png" target="_blank" rel="noopener"><img src="http://p77e9mol2.bkt.clouddn.com/blog/180416/380E3k9HjE.png" alt="新建一个仓库"></a></p><h1 id="部署博客到GitHub"><a href="#部署博客到GitHub" class="headerlink" title="部署博客到GitHub"></a>部署博客到GitHub</h1><p>首先需要安装<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>接下来创建一个bash脚本deploy.sh进行自动化部署，每次需要更新博客，执行此脚本即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo g </span><br><span class="line">cp -R public/* .deploy/Bingoch.github.io # 这里填写自己的博客仓库名</span><br><span class="line">cd .deploy/Bingoch.github.io</span><br><span class="line">git add .</span><br><span class="line">git commit -m “update”</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h1 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h1><p>博文撰写需要使用 <strong>Markdown</strong> 语法，<strong>Markdown</strong> 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档。这里推荐一款 <strong>Markdown</strong> 编辑器 <strong>Cmd Markdown</strong>，界面非常简洁，可以极大地提高写作效率。<br>以本文为例，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于本博客的搭建</span><br><span class="line">tag: Hexo</span><br><span class="line">categories: Hexo</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">所谓“前人栽树，后人乘凉”，本博客的搭建采用了 **Hexo+Next+Github pages** ，在搭建过程中参考了众多大佬撰写的教程，在此非常感谢，下面进入正题。</span><br><span class="line"># 环境配置</span><br><span class="line">在配置环境之前，我们需要先了解一下**Hexo** 。</span><br><span class="line">## 1. 什么是Hexo</span><br><span class="line">**Hexo** 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>一篇博文写完之后，保存文件到\hexo\blog\source_posts目录下。接下来生成静态页面，开启服务器本地访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看页面。如果页面达到预想效果，就可以执行写好的 <em>deploy</em> 脚本将博文部署到github上，此时访问个人博客主页可以看到刚刚发表的文章。</p><p><em>本文至此结束，欢迎评论。再次感谢各位大佬的教程分享。</em></p><blockquote><p>博客搭建过程，更新于2018-4-16 23:04</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;所谓“前人栽树，后人乘凉”，本博客的搭建采用了 &lt;strong&gt;Hexo+Next+Github pages&lt;/strong&gt; ，在搭建过程中参考了众多大佬撰写的教程，在此非常感谢，下面进入正题。&lt;/p&gt;
&lt;h1 id=&quot;Hexo安装与配置&quot;&gt;&lt;a href=&quot;#Hexo安
      
    
    </summary>
    
      <category term="Hexo" scheme="https://bingoch.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://bingoch.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
